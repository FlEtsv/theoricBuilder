/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.view;

import java.awt.FlowLayout;
import javax.swing.JLabel;
import javax.swing.JFrame;
import javax.swing.JPanel;

/*
import java.awt.FlowLayout;
import java.lang.reflect.Field;
import javax.swing.JFrame;
import javax.swing.JLabel;
*/

/**
 *
 * @author USER
 */
public class CrearPaneles extends javax.swing.JPanel {
    
    //private final JLabel[] label = new JLabel[5];
    
    
    /*
    
    Se selecciona el simulador del desplegable.
    Se recibe el número de instancias del simulador elegido.
    Esa variable se usa para saber cuantos paneles existen.
    (Cada instancia, crea un panel)
    
    Existe una variable local, para saber los paneles vistos en front, que se
    comunica y compara con el valor de instancias del CSV.
    
    (EJEMPLO: Si existen 3 instancias en el CSV, el valor de la variable local
    empezará en el 4 (canLabels + 1), y el panel vacío siguiente a crear,
    será ese, el 4. Si finalmente se guarda el test con esa pregunta nueva,
    el CSV pasará a tener 4 instancias, en lugar de 3).

    Cada panel de pregunta/respuestas, está formado por:
        JPanel (AbsolutLayout):
            1 JLabel que hace la función de btnEliminarPregunta.
            1 JLabel invisible con un valor único (id).
            2 AbsolutLayout cada uno con:
                JTextField y JLabel (actúa de fondo gris corporativo/imagen).
            1 GridLayout (Rows 3,  con las 3 respuestas incorrectas).
    
    (Como opción crearía los JPanel nuevos, dentro de un GridLayout,
    usando la opción Rows a 0 y Column a 1, se crean tantas filas como sean
    necesarias. Con VerticalGap, creamos el espaciado entre cada panel de
    preguntas y respuestas correspondiente).
    
    El JLabel invisible que aloja el valor único (id) de cada instancia,
    servirá para poder eliminar la pregunta, que se desee, evitando borrar
    tantas preguntas como hayan vacías. Este valor se usará como variable en
    la función de cada botón, para eliminar, de cada panel.
    
    */
    
    
    
    
    
    /**
     * Creates new form CrearPaneles
     */
    public CrearPaneles() {
        initComponents();
    }
    
    private void agregarNuevoPanel() {
        JPanel nuevoPanel = new JPanel();
        nuevoPanel.setLayout(new FlowLayout());
        nuevoPanel.setName("contenedorPregunta2");

        for (int i = 1; i <= 5; i++) {
            JLabel label = new JLabel("Texto visible " + i);
            label.setName("pregunta"+i);
            nuevoPanel.add(label);
        }

        panel1.add(nuevoPanel);
        panel1.revalidate();
        panel1.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnMenos = new javax.swing.JButton();
        btnMas = new javax.swing.JButton();
        panel1 = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(440, 300));
        setMinimumSize(new java.awt.Dimension(440, 300));
        setPreferredSize(new java.awt.Dimension(440, 300));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TÍTULO DE PRUEBA");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 2, 310, 20));

        btnMenos.setText("-");
        add(btnMenos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, -1));

        btnMas.setText("+");
        btnMas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMasMouseClicked(evt);
            }
        });
        add(btnMas, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 0, 60, -1));

        panel1.setLayout(new javax.swing.BoxLayout(panel1, javax.swing.BoxLayout.Y_AXIS));
        add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 440, 260));
    }// </editor-fold>//GEN-END:initComponents

    private void btnMasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMasMouseClicked
        agregarNuevoPanel();
    }//GEN-LAST:event_btnMasMouseClicked
    /*
    public void labelGenerador(JLabel[] labels, String nombreLabel, Object targetObject) {
        for (int i = 0; i < labels.length; i++) {
            try {
                Field field = targetObject.getClass().getDeclaredField(nombreLabel + i);  // Obtiene el campo por nombre
                field.setAccessible(true);  // Hace el campo accesible
                if (field.get(targetObject) == null) {  // Verifica si el campo aún no está inicializado
                    labels[i] = new JLabel("Label" + i);  // Crea una nueva instancia de JLabel
                    field.set(targetObject, labels[i]);  // Asigna la nueva etiqueta al campo
                } else {
                    labels[i] = (JLabel) field.get(targetObject);  // Obtiene la etiqueta existente del campo si no se tiene que crear
                }
            } catch (NoSuchFieldException | IllegalAccessException e) {
                System.err.println("Error accediendo al label " + e.getMessage());
            }
        }
    }
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMas;
    private javax.swing.JButton btnMenos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panel1;
    // End of variables declaration//GEN-END:variables
}
